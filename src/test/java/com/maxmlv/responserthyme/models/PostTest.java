package com.maxmlv.responserthyme.models;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertSame;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;

import org.junit.jupiter.api.Test;

class PostTest {
    /**
     * Methods under test:
     *
     * <ul>
     *   <li>{@link Post#Post()}
     *   <li>{@link Post#setComments(List)}
     *   <li>{@link Post#setDate(Date)}
     *   <li>{@link Post#setId(long)}
     *   <li>{@link Post#setLikes(List)}
     *   <li>{@link Post#setMediaFile(MediaFile)}
     *   <li>{@link Post#setReplies(List)}
     *   <li>{@link Post#setText(String)}
     *   <li>{@link Post#setUser(User)}
     *   <li>{@link Post#getComments()}
     *   <li>{@link Post#getMediaFile()}
     *   <li>{@link Post#getLikes()}
     *   <li>{@link Post#getReplies()}
     *   <li>{@link Post#getUser()}
     *   <li>{@link Post#getDate()}
     *   <li>{@link Post#getId()}
     *   <li>{@link Post#getText()}
     * </ul>
     */
    @Test
    void testConstructor() {
        Post actualPost = new Post();
        ArrayList<Comment> commentList = new ArrayList<>();
        actualPost.setComments(commentList);
        LocalDateTime atStartOfDayResult = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult = Date.from(atStartOfDayResult.atZone(ZoneId.of("UTC")).toInstant());
        actualPost.setDate(fromResult);
        actualPost.setId(123L);
        ArrayList<PostLike> postLikeList = new ArrayList<>();
        actualPost.setLikes(postLikeList);
        Post post = new Post();
        ArrayList<Comment> commentList1 = new ArrayList<>();
        post.setComments(commentList1);
        LocalDateTime atStartOfDayResult1 = LocalDate.of(1970, 1, 1).atStartOfDay();
        post.setDate(Date.from(atStartOfDayResult1.atZone(ZoneId.of("UTC")).toInstant()));
        post.setId(123L);
        ArrayList<PostLike> postLikeList1 = new ArrayList<>();
        post.setLikes(postLikeList1);
        post.setMediaFile(new MediaFile());
        ArrayList<Reply> replyList = new ArrayList<>();
        post.setReplies(replyList);
        post.setText("Text");
        post.setUser(new User());
        User user = new User();
        user.setActive(true);
        user.setConfirmPassword("iloveyou");
        user.setFirstName("Jane");
        user.setId(123L);
        user.setLastName("Doe");
        ArrayList<PostLike> postLikeList2 = new ArrayList<>();
        user.setLikes(postLikeList2);
        ArrayList<MediaFile> mediaFileList = new ArrayList<>();
        user.setMediaFiles(mediaFileList);
        user.setPassword("iloveyou");
        ArrayList<Post> postList = new ArrayList<>();
        user.setPosts(postList);
        user.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList = new ArrayList<>();
        user.setStars(userStarList);
        user.setUsername("janedoe");
        MediaFile mediaFile = new MediaFile();
        mediaFile.setId(123L);
        mediaFile.setImageUrl("https://example.org/example");
        mediaFile.setName("Name");
        mediaFile.setPost(post);
        mediaFile.setUser(user);
        User user1 = new User();
        user1.setActive(true);
        user1.setConfirmPassword("iloveyou");
        user1.setFirstName("Jane");
        user1.setId(123L);
        user1.setLastName("Doe");
        ArrayList<PostLike> postLikeList3 = new ArrayList<>();
        user1.setLikes(postLikeList3);
        ArrayList<MediaFile> mediaFileList1 = new ArrayList<>();
        user1.setMediaFiles(mediaFileList1);
        user1.setPassword("iloveyou");
        ArrayList<Post> postList1 = new ArrayList<>();
        user1.setPosts(postList1);
        user1.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList1 = new ArrayList<>();
        user1.setStars(userStarList1);
        user1.setUsername("janedoe");
        Post post1 = new Post();
        ArrayList<Comment> commentList2 = new ArrayList<>();
        post1.setComments(commentList2);
        LocalDateTime atStartOfDayResult2 = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult1 = Date.from(atStartOfDayResult2.atZone(ZoneId.of("UTC")).toInstant());
        post1.setDate(fromResult1);
        post1.setId(123L);
        ArrayList<PostLike> postLikeList4 = new ArrayList<>();
        post1.setLikes(postLikeList4);
        post1.setMediaFile(mediaFile);
        ArrayList<Reply> replyList1 = new ArrayList<>();
        post1.setReplies(replyList1);
        post1.setText("Text");
        post1.setUser(user1);
        User user2 = new User();
        user2.setActive(true);
        user2.setConfirmPassword("iloveyou");
        user2.setFirstName("Jane");
        user2.setId(123L);
        user2.setLastName("Doe");
        ArrayList<PostLike> postLikeList5 = new ArrayList<>();
        user2.setLikes(postLikeList5);
        ArrayList<MediaFile> mediaFileList2 = new ArrayList<>();
        user2.setMediaFiles(mediaFileList2);
        user2.setPassword("iloveyou");
        ArrayList<Post> postList2 = new ArrayList<>();
        user2.setPosts(postList2);
        user2.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList2 = new ArrayList<>();
        user2.setStars(userStarList2);
        user2.setUsername("janedoe");
        MediaFile mediaFile1 = new MediaFile();
        mediaFile1.setId(123L);
        mediaFile1.setImageUrl("https://example.org/example");
        mediaFile1.setName("Name");
        mediaFile1.setPost(post1);
        mediaFile1.setUser(user2);
        actualPost.setMediaFile(mediaFile1);
        ArrayList<Reply> replyList2 = new ArrayList<>();
        actualPost.setReplies(replyList2);
        actualPost.setText("Text");
        User user3 = new User();
        user3.setActive(true);
        user3.setConfirmPassword("iloveyou");
        user3.setFirstName("Jane");
        user3.setId(123L);
        user3.setLastName("Doe");
        ArrayList<PostLike> postLikeList6 = new ArrayList<>();
        user3.setLikes(postLikeList6);
        ArrayList<MediaFile> mediaFileList3 = new ArrayList<>();
        user3.setMediaFiles(mediaFileList3);
        user3.setPassword("iloveyou");
        ArrayList<Post> postList3 = new ArrayList<>();
        user3.setPosts(postList3);
        user3.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList3 = new ArrayList<>();
        user3.setStars(userStarList3);
        user3.setUsername("janedoe");
        actualPost.setUser(user3);
        List<Comment> comments = actualPost.getComments();
        assertSame(commentList, comments);
        assertEquals(postLikeList, comments);
        assertEquals(commentList2, comments);
        assertEquals(postLikeList4, comments);
        assertEquals(commentList1, comments);
        assertEquals(postLikeList1, comments);
        assertEquals(replyList, comments);
        assertEquals(postLikeList2, comments);
        assertEquals(mediaFileList, comments);
        assertEquals(postList, comments);
        assertEquals(userStarList, comments);
        assertEquals(replyList1, comments);
        assertEquals(postLikeList3, comments);
        assertEquals(mediaFileList1, comments);
        assertEquals(postList1, comments);
        assertEquals(userStarList1, comments);
        assertEquals(postLikeList5, comments);
        assertEquals(mediaFileList2, comments);
        assertEquals(postList2, comments);
        assertEquals(userStarList2, comments);
        assertEquals(replyList2, comments);
        assertEquals(postLikeList6, comments);
        assertEquals(mediaFileList3, comments);
        assertEquals(postList3, comments);
        assertEquals(userStarList3, comments);
        MediaFile mediaFile2 = actualPost.getMediaFile();
        Post post2 = mediaFile2.getPost();
        List<Comment> comments1 = post2.getComments();
        assertSame(commentList2, comments1);
        assertEquals(commentList1, comments1);
        assertEquals(postLikeList1, comments1);
        assertEquals(replyList, comments1);
        assertEquals(postLikeList2, comments1);
        assertEquals(mediaFileList, comments1);
        assertEquals(postList, comments1);
        assertEquals(userStarList, comments1);
        assertEquals(replyList1, comments1);
        assertEquals(postLikeList3, comments1);
        assertEquals(mediaFileList1, comments1);
        assertEquals(postList1, comments1);
        assertEquals(userStarList1, comments1);
        assertEquals(mediaFileList2, comments1);
        assertEquals(postList2, comments1);
        assertEquals(userStarList2, comments1);
        assertEquals(comments, comments1);
        List<PostLike> likes = actualPost.getLikes();
        assertEquals(likes, comments1);
        List<Reply> replies = actualPost.getReplies();
        assertEquals(replies, comments1);
        User user4 = actualPost.getUser();
        List<PostLike> likes1 = user4.getLikes();
        assertEquals(likes1, comments1);
        List<MediaFile> mediaFiles = user4.getMediaFiles();
        assertEquals(mediaFiles, comments1);
        List<Post> posts = user4.getPosts();
        assertEquals(posts, comments1);
        List<UserStar> stars = user4.getStars();
        assertEquals(stars, comments1);
        List<PostLike> likes2 = post2.getLikes();
        assertEquals(likes2, comments1);
        List<PostLike> likes3 = mediaFile2.getUser().getLikes();
        assertEquals(likes3, comments1);
        assertSame(fromResult, actualPost.getDate());
        assertSame(fromResult1, post2.getDate());
        assertEquals(123L, actualPost.getId());
        assertEquals(123L, post2.getId());
        assertSame(postLikeList, likes);
        assertEquals(commentList2, likes);
        assertEquals(postLikeList4, likes);
        assertEquals(commentList1, likes);
        assertEquals(postLikeList1, likes);
        assertEquals(replyList, likes);
        assertEquals(postLikeList2, likes);
        assertEquals(mediaFileList, likes);
        assertEquals(postList, likes);
        assertEquals(userStarList, likes);
        assertEquals(replyList1, likes);
        assertEquals(postLikeList3, likes);
        assertEquals(mediaFileList1, likes);
        assertEquals(postList1, likes);
        assertEquals(userStarList1, likes);
        assertEquals(postLikeList5, likes);
        assertEquals(mediaFileList2, likes);
        assertEquals(postList2, likes);
        assertEquals(userStarList2, likes);
        assertEquals(replyList2, likes);
        assertEquals(postLikeList6, likes);
        assertEquals(mediaFileList3, likes);
        assertEquals(postList3, likes);
        assertEquals(userStarList3, likes);
        assertEquals(comments, likes);
        assertSame(postLikeList4, likes2);
        assertEquals(commentList2, likes2);
        assertEquals(commentList1, likes2);
        assertEquals(postLikeList1, likes2);
        assertEquals(replyList, likes2);
        assertEquals(postLikeList2, likes2);
        assertEquals(mediaFileList, likes2);
        assertEquals(postList, likes2);
        assertEquals(userStarList, likes2);
        assertEquals(replyList1, likes2);
        assertEquals(postLikeList3, likes2);
        assertEquals(mediaFileList1, likes2);
        assertEquals(postList1, likes2);
        assertEquals(userStarList1, likes2);
        assertEquals(mediaFileList2, likes2);
        assertEquals(postList2, likes2);
        assertEquals(userStarList2, likes2);
        assertEquals(comments, likes2);
        assertEquals(likes, likes2);
        assertEquals(replies, likes2);
        assertEquals(likes1, likes2);
        assertEquals(mediaFiles, likes2);
        assertEquals(posts, likes2);
        assertEquals(stars, likes2);
        assertEquals(likes3, likes2);
        assertSame(mediaFile1, mediaFile2);
        assertSame(mediaFile, post2.getMediaFile());
        assertSame(replyList2, replies);
        assertEquals(commentList2, replies);
        assertEquals(postLikeList4, replies);
        assertEquals(commentList1, replies);
        assertEquals(postLikeList1, replies);
        assertEquals(replyList, replies);
        assertEquals(postLikeList2, replies);
        assertEquals(mediaFileList, replies);
        assertEquals(postList, replies);
        assertEquals(userStarList, replies);
        assertEquals(replyList1, replies);
        assertEquals(postLikeList3, replies);
        assertEquals(mediaFileList1, replies);
        assertEquals(postList1, replies);
        assertEquals(userStarList1, replies);
        assertEquals(postLikeList5, replies);
        assertEquals(mediaFileList2, replies);
        assertEquals(postList2, replies);
        assertEquals(userStarList2, replies);
        assertEquals(postLikeList6, replies);
        assertEquals(mediaFileList3, replies);
        assertEquals(postList3, replies);
        assertEquals(userStarList3, replies);
        assertEquals(comments, replies);
        assertEquals(likes, replies);
        List<Reply> replies1 = post2.getReplies();
        assertSame(replyList1, replies1);
        assertEquals(commentList1, replies1);
        assertEquals(postLikeList1, replies1);
        assertEquals(replyList, replies1);
        assertEquals(postLikeList2, replies1);
        assertEquals(mediaFileList, replies1);
        assertEquals(postList, replies1);
        assertEquals(userStarList, replies1);
        assertEquals(postLikeList3, replies1);
        assertEquals(mediaFileList1, replies1);
        assertEquals(postList1, replies1);
        assertEquals(userStarList1, replies1);
        assertEquals(mediaFileList2, replies1);
        assertEquals(postList2, replies1);
        assertEquals(userStarList2, replies1);
        assertEquals(comments, replies1);
        assertEquals(likes, replies1);
        assertEquals(replies, replies1);
        assertEquals(likes1, replies1);
        assertEquals(mediaFiles, replies1);
        assertEquals(posts, replies1);
        assertEquals(stars, replies1);
        assertEquals(comments1, replies1);
        assertEquals(likes2, replies1);
        assertEquals(likes3, replies1);
        assertEquals("Text", actualPost.getText());
        assertEquals("Text", post2.getText());
        assertSame(user3, user4);
        assertSame(user1, post2.getUser());
    }

    /**
     * Methods under test:
     *
     * <ul>
     *   <li>{@link Post#Post(String, User)}
     *   <li>{@link Post#setComments(List)}
     *   <li>{@link Post#setDate(Date)}
     *   <li>{@link Post#setId(long)}
     *   <li>{@link Post#setLikes(List)}
     *   <li>{@link Post#Post()}
     *   <li>{@link Post#setMediaFile(MediaFile)}
     *   <li>{@link Post#setReplies(List)}
     *   <li>{@link Post#setText(String)}
     *   <li>{@link Post#setUser(User)}
     *   <li>{@link Post#getComments()}
     *   <li>{@link Post#getMediaFile()}
     *   <li>{@link Post#getLikes()}
     *   <li>{@link Post#getReplies()}
     *   <li>{@link Post#getUser()}
     *   <li>{@link Post#getDate()}
     *   <li>{@link Post#getId()}
     *   <li>{@link Post#getText()}
     * </ul>
     */
    @Test
    void testConstructor2() {
        User user = new User();
        user.setActive(true);
        user.setConfirmPassword("iloveyou");
        user.setFirstName("Jane");
        user.setId(123L);
        user.setLastName("Doe");
        ArrayList<PostLike> postLikeList = new ArrayList<>();
        user.setLikes(postLikeList);
        ArrayList<MediaFile> mediaFileList = new ArrayList<>();
        user.setMediaFiles(mediaFileList);
        user.setPassword("iloveyou");
        ArrayList<Post> postList = new ArrayList<>();
        user.setPosts(postList);
        user.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList = new ArrayList<>();
        user.setStars(userStarList);
        user.setUsername("janedoe");
        Post actualPost = new Post("Text", user);
        ArrayList<Comment> commentList = new ArrayList<>();
        actualPost.setComments(commentList);
        LocalDateTime atStartOfDayResult = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult = Date.from(atStartOfDayResult.atZone(ZoneId.of("UTC")).toInstant());
        actualPost.setDate(fromResult);
        actualPost.setId(123L);
        ArrayList<PostLike> postLikeList1 = new ArrayList<>();
        actualPost.setLikes(postLikeList1);
        Post post = new Post();
        ArrayList<Comment> commentList1 = new ArrayList<>();
        post.setComments(commentList1);
        LocalDateTime atStartOfDayResult1 = LocalDate.of(1970, 1, 1).atStartOfDay();
        post.setDate(Date.from(atStartOfDayResult1.atZone(ZoneId.of("UTC")).toInstant()));
        post.setId(123L);
        ArrayList<PostLike> postLikeList2 = new ArrayList<>();
        post.setLikes(postLikeList2);
        post.setMediaFile(new MediaFile());
        ArrayList<Reply> replyList = new ArrayList<>();
        post.setReplies(replyList);
        post.setText("Text");
        post.setUser(new User());
        User user1 = new User();
        user1.setActive(true);
        user1.setConfirmPassword("iloveyou");
        user1.setFirstName("Jane");
        user1.setId(123L);
        user1.setLastName("Doe");
        ArrayList<PostLike> postLikeList3 = new ArrayList<>();
        user1.setLikes(postLikeList3);
        ArrayList<MediaFile> mediaFileList1 = new ArrayList<>();
        user1.setMediaFiles(mediaFileList1);
        user1.setPassword("iloveyou");
        ArrayList<Post> postList1 = new ArrayList<>();
        user1.setPosts(postList1);
        user1.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList1 = new ArrayList<>();
        user1.setStars(userStarList1);
        user1.setUsername("janedoe");
        MediaFile mediaFile = new MediaFile();
        mediaFile.setId(123L);
        mediaFile.setImageUrl("https://example.org/example");
        mediaFile.setName("Name");
        mediaFile.setPost(post);
        mediaFile.setUser(user1);
        User user2 = new User();
        user2.setActive(true);
        user2.setConfirmPassword("iloveyou");
        user2.setFirstName("Jane");
        user2.setId(123L);
        user2.setLastName("Doe");
        ArrayList<PostLike> postLikeList4 = new ArrayList<>();
        user2.setLikes(postLikeList4);
        ArrayList<MediaFile> mediaFileList2 = new ArrayList<>();
        user2.setMediaFiles(mediaFileList2);
        user2.setPassword("iloveyou");
        ArrayList<Post> postList2 = new ArrayList<>();
        user2.setPosts(postList2);
        user2.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList2 = new ArrayList<>();
        user2.setStars(userStarList2);
        user2.setUsername("janedoe");
        Post post1 = new Post();
        ArrayList<Comment> commentList2 = new ArrayList<>();
        post1.setComments(commentList2);
        LocalDateTime atStartOfDayResult2 = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult1 = Date.from(atStartOfDayResult2.atZone(ZoneId.of("UTC")).toInstant());
        post1.setDate(fromResult1);
        post1.setId(123L);
        ArrayList<PostLike> postLikeList5 = new ArrayList<>();
        post1.setLikes(postLikeList5);
        post1.setMediaFile(mediaFile);
        ArrayList<Reply> replyList1 = new ArrayList<>();
        post1.setReplies(replyList1);
        post1.setText("Text");
        post1.setUser(user2);
        User user3 = new User();
        user3.setActive(true);
        user3.setConfirmPassword("iloveyou");
        user3.setFirstName("Jane");
        user3.setId(123L);
        user3.setLastName("Doe");
        ArrayList<PostLike> postLikeList6 = new ArrayList<>();
        user3.setLikes(postLikeList6);
        ArrayList<MediaFile> mediaFileList3 = new ArrayList<>();
        user3.setMediaFiles(mediaFileList3);
        user3.setPassword("iloveyou");
        ArrayList<Post> postList3 = new ArrayList<>();
        user3.setPosts(postList3);
        user3.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList3 = new ArrayList<>();
        user3.setStars(userStarList3);
        user3.setUsername("janedoe");
        MediaFile mediaFile1 = new MediaFile();
        mediaFile1.setId(123L);
        mediaFile1.setImageUrl("https://example.org/example");
        mediaFile1.setName("Name");
        mediaFile1.setPost(post1);
        mediaFile1.setUser(user3);
        actualPost.setMediaFile(mediaFile1);
        ArrayList<Reply> replyList2 = new ArrayList<>();
        actualPost.setReplies(replyList2);
        actualPost.setText("Text");
        User user4 = new User();
        user4.setActive(true);
        user4.setConfirmPassword("iloveyou");
        user4.setFirstName("Jane");
        user4.setId(123L);
        user4.setLastName("Doe");
        ArrayList<PostLike> postLikeList7 = new ArrayList<>();
        user4.setLikes(postLikeList7);
        ArrayList<MediaFile> mediaFileList4 = new ArrayList<>();
        user4.setMediaFiles(mediaFileList4);
        user4.setPassword("iloveyou");
        ArrayList<Post> postList4 = new ArrayList<>();
        user4.setPosts(postList4);
        user4.setRoles(new HashSet<>());
        ArrayList<UserStar> userStarList4 = new ArrayList<>();
        user4.setStars(userStarList4);
        user4.setUsername("janedoe");
        actualPost.setUser(user4);
        List<Comment> comments = actualPost.getComments();
        assertSame(commentList, comments);
        assertEquals(postLikeList, comments);
        assertEquals(mediaFileList, comments);
        assertEquals(postList, comments);
        assertEquals(userStarList, comments);
        assertEquals(postLikeList1, comments);
        assertEquals(commentList2, comments);
        assertEquals(postLikeList5, comments);
        assertEquals(commentList1, comments);
        assertEquals(postLikeList2, comments);
        assertEquals(replyList, comments);
        assertEquals(postLikeList3, comments);
        assertEquals(mediaFileList1, comments);
        assertEquals(postList1, comments);
        assertEquals(userStarList1, comments);
        assertEquals(replyList1, comments);
        assertEquals(postLikeList4, comments);
        assertEquals(mediaFileList2, comments);
        assertEquals(postList2, comments);
        assertEquals(userStarList2, comments);
        assertEquals(postLikeList6, comments);
        assertEquals(mediaFileList3, comments);
        assertEquals(postList3, comments);
        assertEquals(userStarList3, comments);
        assertEquals(replyList2, comments);
        assertEquals(postLikeList7, comments);
        assertEquals(mediaFileList4, comments);
        assertEquals(postList4, comments);
        assertEquals(userStarList4, comments);
        MediaFile mediaFile2 = actualPost.getMediaFile();
        Post post2 = mediaFile2.getPost();
        List<Comment> comments1 = post2.getComments();
        assertSame(commentList2, comments1);
        assertEquals(postLikeList, comments1);
        assertEquals(mediaFileList, comments1);
        assertEquals(postList, comments1);
        assertEquals(userStarList, comments1);
        assertEquals(commentList1, comments1);
        assertEquals(postLikeList2, comments1);
        assertEquals(replyList, comments1);
        assertEquals(postLikeList3, comments1);
        assertEquals(mediaFileList1, comments1);
        assertEquals(postList1, comments1);
        assertEquals(userStarList1, comments1);
        assertEquals(replyList1, comments1);
        assertEquals(postLikeList4, comments1);
        assertEquals(mediaFileList2, comments1);
        assertEquals(postList2, comments1);
        assertEquals(userStarList2, comments1);
        assertEquals(mediaFileList3, comments1);
        assertEquals(postList3, comments1);
        assertEquals(userStarList3, comments1);
        assertEquals(comments, comments1);
        List<PostLike> likes = actualPost.getLikes();
        assertEquals(likes, comments1);
        List<Reply> replies = actualPost.getReplies();
        assertEquals(replies, comments1);
        User user5 = actualPost.getUser();
        List<PostLike> likes1 = user5.getLikes();
        assertEquals(likes1, comments1);
        List<MediaFile> mediaFiles = user5.getMediaFiles();
        assertEquals(mediaFiles, comments1);
        List<Post> posts = user5.getPosts();
        assertEquals(posts, comments1);
        List<UserStar> stars = user5.getStars();
        assertEquals(stars, comments1);
        List<PostLike> likes2 = post2.getLikes();
        assertEquals(likes2, comments1);
        List<PostLike> likes3 = mediaFile2.getUser().getLikes();
        assertEquals(likes3, comments1);
        assertSame(fromResult, actualPost.getDate());
        assertSame(fromResult1, post2.getDate());
        assertEquals(123L, actualPost.getId());
        assertEquals(123L, post2.getId());
        assertSame(postLikeList1, likes);
        assertEquals(postLikeList, likes);
        assertEquals(mediaFileList, likes);
        assertEquals(postList, likes);
        assertEquals(userStarList, likes);
        assertEquals(commentList2, likes);
        assertEquals(postLikeList5, likes);
        assertEquals(commentList1, likes);
        assertEquals(postLikeList2, likes);
        assertEquals(replyList, likes);
        assertEquals(postLikeList3, likes);
        assertEquals(mediaFileList1, likes);
        assertEquals(postList1, likes);
        assertEquals(userStarList1, likes);
        assertEquals(replyList1, likes);
        assertEquals(postLikeList4, likes);
        assertEquals(mediaFileList2, likes);
        assertEquals(postList2, likes);
        assertEquals(userStarList2, likes);
        assertEquals(postLikeList6, likes);
        assertEquals(mediaFileList3, likes);
        assertEquals(postList3, likes);
        assertEquals(userStarList3, likes);
        assertEquals(replyList2, likes);
        assertEquals(postLikeList7, likes);
        assertEquals(mediaFileList4, likes);
        assertEquals(postList4, likes);
        assertEquals(userStarList4, likes);
        assertEquals(comments, likes);
        assertSame(postLikeList5, likes2);
        assertEquals(postLikeList, likes2);
        assertEquals(mediaFileList, likes2);
        assertEquals(postList, likes2);
        assertEquals(userStarList, likes2);
        assertEquals(commentList2, likes2);
        assertEquals(commentList1, likes2);
        assertEquals(postLikeList2, likes2);
        assertEquals(replyList, likes2);
        assertEquals(postLikeList3, likes2);
        assertEquals(mediaFileList1, likes2);
        assertEquals(postList1, likes2);
        assertEquals(userStarList1, likes2);
        assertEquals(replyList1, likes2);
        assertEquals(postLikeList4, likes2);
        assertEquals(mediaFileList2, likes2);
        assertEquals(postList2, likes2);
        assertEquals(userStarList2, likes2);
        assertEquals(mediaFileList3, likes2);
        assertEquals(postList3, likes2);
        assertEquals(userStarList3, likes2);
        assertEquals(comments, likes2);
        assertEquals(likes, likes2);
        assertEquals(replies, likes2);
        assertEquals(likes1, likes2);
        assertEquals(mediaFiles, likes2);
        assertEquals(posts, likes2);
        assertEquals(stars, likes2);
        assertEquals(likes3, likes2);
        assertSame(mediaFile1, mediaFile2);
        assertSame(mediaFile, post2.getMediaFile());
        assertSame(replyList2, replies);
        assertEquals(postLikeList, replies);
        assertEquals(mediaFileList, replies);
        assertEquals(postList, replies);
        assertEquals(userStarList, replies);
        assertEquals(commentList2, replies);
        assertEquals(postLikeList5, replies);
        assertEquals(commentList1, replies);
        assertEquals(postLikeList2, replies);
        assertEquals(replyList, replies);
        assertEquals(postLikeList3, replies);
        assertEquals(mediaFileList1, replies);
        assertEquals(postList1, replies);
        assertEquals(userStarList1, replies);
        assertEquals(replyList1, replies);
        assertEquals(postLikeList4, replies);
        assertEquals(mediaFileList2, replies);
        assertEquals(postList2, replies);
        assertEquals(userStarList2, replies);
        assertEquals(postLikeList6, replies);
        assertEquals(mediaFileList3, replies);
        assertEquals(postList3, replies);
        assertEquals(userStarList3, replies);
        assertEquals(postLikeList7, replies);
        assertEquals(mediaFileList4, replies);
        assertEquals(postList4, replies);
        assertEquals(userStarList4, replies);
        assertEquals(comments, replies);
        assertEquals(likes, replies);
        List<Reply> replies1 = post2.getReplies();
        assertSame(replyList1, replies1);
        assertEquals(postLikeList, replies1);
        assertEquals(mediaFileList, replies1);
        assertEquals(postList, replies1);
        assertEquals(userStarList, replies1);
        assertEquals(commentList1, replies1);
        assertEquals(postLikeList2, replies1);
        assertEquals(replyList, replies1);
        assertEquals(postLikeList3, replies1);
        assertEquals(mediaFileList1, replies1);
        assertEquals(postList1, replies1);
        assertEquals(userStarList1, replies1);
        assertEquals(postLikeList4, replies1);
        assertEquals(mediaFileList2, replies1);
        assertEquals(postList2, replies1);
        assertEquals(userStarList2, replies1);
        assertEquals(mediaFileList3, replies1);
        assertEquals(postList3, replies1);
        assertEquals(userStarList3, replies1);
        assertEquals(comments, replies1);
        assertEquals(likes, replies1);
        assertEquals(replies, replies1);
        assertEquals(likes1, replies1);
        assertEquals(mediaFiles, replies1);
        assertEquals(posts, replies1);
        assertEquals(stars, replies1);
        assertEquals(comments1, replies1);
        assertEquals(likes2, replies1);
        assertEquals(likes3, replies1);
        assertEquals("Text", actualPost.getText());
        assertEquals("Text", post2.getText());
        assertSame(user4, user5);
        assertSame(user2, post2.getUser());
    }
}

