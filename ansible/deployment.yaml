---
- name: Deploy java application
  hosts: "{{ lookup('env', 'DEPLOY_ON') }}"
  become: yes
  vars_files:
    - ./vars/vars.yaml
  vars:
    app:
      - key: AWS_S3_BUCKET
        value: '{{ s3_bucket }}'
      - key: SPRING_DATASOURCE_URL
        value: 'jdbc:{{ rds_engine }}://{{ rds_address }}:{{ rds_port }}/{{ rds_db }}'
      - key: SPRING_DATASOURCE_USERNAME
        value: '{{ rds_username }}'
      - key: SPRING_DATASOURCE_PASSWORD
        value: '{{ rds_password }}'
      - key: RESPONSER_VERSION
        value: '{{ app_version }}'
  tasks:
    - name: Ensure application service is stopped
      service:
        name: responser
        state: stopped
      ignore_errors: true

    - name: Clean working directory from old .jar files
      command: rm /var/www/{{ domain }}/*.jar
      ignore_errors: yes

    - name: customize /etc/environment
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      with_items: "{{ app }}"

    - name: Copy .jar file
      copy:
        src: ../target/responser-{{ app_version }}.jar
        dest: /var/www/{{ domain }}/responser-{{ app_version }}.jar
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: 0644

    - name: Copy systemd service file
      template:
        src: responser.service
        dest: /etc/systemd/system
        owner: '{{ ansible_ssh_user }}'
        group: '{{ ansible_ssh_user }}'

    - name: Reread configs
      systemd:
        daemon_reload: yes

    - name: Run responser.service
      service:
        name: responser
        state: started